type User {
  id: ID! @unique
  courses: [Course!]!
  student_id: Int
  name: String!
  nickname: String
  email: String! @unique
  photo: String
  iClickerID: String
  bio: String
  isAdmin: Boolean @default(value: "false")
  createdAt: DateTime!
  updatedAt: DateTime!
  activations: [Activation!]!
  notifications: [Notification!]! @relation(name: "UserNotifications")
}

type Course {
  id: ID! @unique
  users: [User!]!
  name: String!
  title: String
  description: String
  activations: [Activation!]!
  term: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

# linking table
type CourseUser {
  id: ID! @unique
  user_type: String!
  course: Course! # relationship to Course
  user: User! # relationship to User
}

type Activation {
  id: ID! @unique
  activation_code: String! @unique
  course: Course!
  user: User
  activatedAt: DateTime!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type MessageRead {
  id: ID! @unique
  user: User!
  read: Boolean @default(value: "false")
  updatedAt: DateTime!
}

enum TargetType {
  USER
  USERS 
  COURSE
  GLOBAL
}

type MessageTarget {
  id: ID! @unique
  type: TargetType!
  user: User @relation(name: "MessageTargetUser")
  users: [User!]! @relation(name: "MessageTargetManyUsers")
  course: Course @relation(name: "MessageTargetCourse")
  reads: [MessageRead!]!
  createdAt: DateTime!
  updatedAt: DateTime!
}

enum NotificationType {
  INFORMATIVE
  NEW_COURSE
  SYSTEM_ALERT
  COURSE_ANNOUNCEMENT
}

type Notification {
  id: ID! @unique
  notify_type: NotificationType! @default(value: "INFORMATIVE")
  target: MessageTarget!
  msg: String
  add_data: Json
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Reminder {
  id: ID! @unique
  msg: String!
  target: MessageTarget
  add_data: Json
  triggerTime: DateTime!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type CourseMessage {
  id: ID! @unique
  course: Course!
  body: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

# Quiz-specific
type Blocks {
  id: ID! @unique
  block: String!
  blockType: Int!
  courseId: String!
  testId: String
  instructions: String
  tag: String
  ord: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

type QuesLinks {
  id: ID! @unique
  blockId: Int!
  questionId: Int!
  pos: Int
  points: Int
}

type Questions {
  id: ID! @unique
  question: String!
  typeId: Int!
  mediaId: String
  difficulty: Int
  feedbackId: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

type QuestionTypes {
  id: ID! @unique
  type: String!
  code: Int!
}

type Answers {
  id: ID! @unique
  questionId: Int!
  answer: String!
  correct: Int
  mediaId: String
  feedbackId: Int
  pos: Int
  points: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}

type AnswerTexts {
  id: ID! @unique
  studentId: Int!
  blockId: Int!
  questionId: Int!
  answerText: String
  pts: Int
  tag: Int
  createdAt: DateTime!
  updatedAt: DateTime!
}
